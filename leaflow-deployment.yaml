# Leaflow 完整部署清单 - 智能合同模板系统
---
# =====================================================
# PostgreSQL 数据库
# =====================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_USER
          value: "admin"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: postgres-password
        - name: POSTGRES_DB
          value: "contract_db"
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None

---
# =====================================================
# Redis 缓存
# =====================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379

---
# =====================================================
# MinIO 对象存储
# =====================================================
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  labels:
    app: minio
spec:
  serviceName: minio
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:latest
        args:
        - server
        - /data
        - --console-address
        - ":9001"
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: minio-access-key
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: minio-secret-key
        volumeMounts:
        - name: minio-storage
          mountPath: /data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
  volumeClaimTemplates:
  - metadata:
      name: minio-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi

---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  ports:
  - name: api
    port: 9000
    targetPort: 9000
  - name: console
    port: 9001
    targetPort: 9001

---
# =====================================================
# FastAPI 后端
# =====================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-backend
  labels:
    app: contract-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: contract-backend
  template:
    metadata:
      labels:
        app: contract-backend
    spec:
      containers:
      - name: fastapi
        image: your-registry.leaflow.net/contract-backend:latest  # 替换为你的镜像
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: APP_ENV
          value: "production"
        - name: DEBUG
          value: "false"
        - name: DATABASE_URL
          value: "postgresql://admin:$(POSTGRES_PASSWORD)@postgres-service:5432/contract_db"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: postgres-password
        - name: MINIO_ENDPOINT
          value: "minio-service:9000"
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: minio-access-key
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: minio-secret-key
        - name: MINIO_BUCKET
          value: "contract-storage"
        - name: MINIO_SECURE
          value: "false"
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: gemini-api-key
        - name: GEMINI_MODEL
          value: "gemini-2.0-flash-exp"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: contract-secrets
              key: jwt-secret
        - name: CORS_ORIGINS
          value: "https://your-domain.leaflow.dev"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: contract-backend-service
spec:
  selector:
    app: contract-backend
  ports:
  - port: 8000
    targetPort: 8000

---
# =====================================================
# Next.js 前端
# =====================================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contract-frontend
  labels:
    app: contract-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contract-frontend
  template:
    metadata:
      labels:
        app: contract-frontend
    spec:
      containers:
      - name: nextjs
        image: your-registry.leaflow.net/contract-frontend:latest  # 替换为你的镜像
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "https://api.your-domain.leaflow.dev"
        - name: NEXT_PUBLIC_APP_URL
          value: "https://your-domain.leaflow.dev"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: contract-frontend-service
spec:
  selector:
    app: contract-frontend
  ports:
  - port: 3000
    targetPort: 3000

---
# =====================================================
# Ingress 配置（域名访问）
# =====================================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contract-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - your-domain.leaflow.dev
    - api.your-domain.leaflow.dev
    secretName: contract-tls
  rules:
  - host: your-domain.leaflow.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-frontend-service
            port:
              number: 3000
  - host: api.your-domain.leaflow.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: contract-backend-service
            port:
              number: 8000
